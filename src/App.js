import { useState } from "react";
import './App.css';

const menu = [
  { name: "‡∏™‡∏¥‡∏á‡∏´‡πå (‡∏Ç‡∏ß‡∏î)", price: 100, unit: "‡∏Ç‡∏ß‡∏î" },
  { name: "‡∏™‡∏¥‡∏á‡∏´‡πå (‡∏Å‡∏£‡∏∞‡∏õ‡πã‡∏≠‡∏á)", price: 100, unit: "‡∏Å‡∏£‡∏∞‡∏õ‡πã‡∏≠‡∏á" },
  { name: "‡∏•‡∏µ‡πÇ‡∏≠ (‡∏Ç‡∏ß‡∏î)", price: 100, unit: "‡∏Ç‡∏ß‡∏î" },
  { name: "‡∏•‡∏µ‡πÇ‡∏≠ (‡∏Å‡∏£‡∏∞‡∏õ‡πã‡∏≠‡∏á)", price: 100, unit: "‡∏Å‡∏£‡∏∞‡∏õ‡πã‡∏≠‡∏á" },
  { name: "‡∏ä‡πâ‡∏≤‡∏á‡∏Ñ‡∏•‡∏≤‡∏™‡∏™‡∏¥‡∏Ñ (‡∏Ç‡∏ß‡∏î)", price: 100, unit: "‡∏Ç‡∏ß‡∏î" },
  { name: "‡∏ä‡πâ‡∏≤‡∏á‡∏Ñ‡∏•‡∏≤‡∏™‡∏™‡∏¥‡∏Ñ (‡∏Å‡∏£‡∏∞‡∏õ‡πã‡∏≠‡∏á)", price: 100, unit: "‡∏Å‡∏£‡∏∞‡∏õ‡πã‡∏≠‡∏á" },
  { name: "‡∏ä‡πâ‡∏≤‡∏á Cold Brew", price: 100, unit: "‡∏Ç‡∏ß‡∏î" },
  { name: "‡∏ä‡πâ‡∏≤‡∏á Cold Brew (‡∏Å‡∏£‡∏∞‡∏õ‡πã‡∏≠‡∏á)", price: 100, unit: "‡∏Å‡∏£‡∏∞‡∏õ‡πã‡∏≠‡∏á" },
  { name: "‡∏•‡∏≤‡πÄ‡∏Å‡∏≠‡∏£‡πå", price: 100, unit: "‡∏Ç‡∏ß‡∏î" },
  { name: "‡∏•‡∏≤‡πÄ‡∏Å‡∏≠‡∏£‡πå (‡∏Å‡∏£‡∏∞‡∏õ‡πã‡∏≠‡∏á)", price: 100, unit: "‡∏Å‡∏£‡∏∞‡∏õ‡πã‡∏≠‡∏á" },
  { name: "‡∏î‡∏∏‡∏á‡πÄ‡∏Å‡∏• ‡∏Ñ‡∏≤‡∏£‡∏≤‡∏ö‡∏≤‡∏ß", price: 100, unit: "‡∏Ç‡∏ß‡∏î" },
  { name: "‡∏î‡∏∏‡∏á‡πÄ‡∏Å‡∏• ‡∏Ñ‡∏≤‡∏£‡∏≤‡∏ö‡∏≤‡∏ß (‡∏Å‡∏£‡∏∞‡∏õ‡πã‡∏≠‡∏á)", price: 100, unit: "‡∏Å‡∏£‡∏∞‡∏õ‡πã‡∏≠‡∏á" },
  { name: "IPA", price: 100, unit: "‡∏Ç‡∏ß‡∏î" },
  { name: "IPA (‡∏Å‡∏£‡∏∞‡∏õ‡πã‡∏≠‡∏á)", price: 100, unit: "‡∏Å‡∏£‡∏∞‡∏õ‡πã‡∏≠‡∏á" },
  { name: "‡πÑ‡∏ß‡πÄ‡∏ã‡πà‡∏ô (‡∏Ç‡∏ß‡∏î)", price: 100, unit: "‡∏Ç‡∏ß‡∏î" },
  { name: "‡πÑ‡∏ß‡πÄ‡∏ã‡πà‡∏ô (‡∏Å‡∏£‡∏∞‡∏õ‡πã‡∏≠‡∏á)", price: 100, unit: "‡∏Å‡∏£‡∏∞‡∏õ‡πã‡∏≠‡∏á" },
  { name: "‡πÇ‡∏£‡πÄ‡∏ã‡πà", price: 100, unit: "‡∏Ç‡∏ß‡∏î" },
  { name: "‡πÇ‡∏£‡πÄ‡∏ã‡πà (‡∏Å‡∏£‡∏∞‡∏õ‡πã‡∏≠‡∏á)", price: 100, unit: "‡∏Å‡∏£‡∏∞‡∏õ‡πã‡∏≠‡∏á" },
  { name: "‡∏´‡∏á‡∏™‡πå‡∏Å‡∏•‡∏°", price: 350, unit: "‡∏Ç‡∏ß‡∏î" },
  { name: "‡πÅ‡∏™‡∏á‡∏Å‡∏•‡∏°", price: 390, unit: "‡∏Ç‡∏ß‡∏î" },
  { name: "‡∏£‡∏µ‡πÅ‡∏ö‡∏ô", price: 500, unit: "‡∏Ç‡∏ß‡∏î" },
  { name: "‡∏ô‡πâ‡∏≥", price: 15, unit: "‡∏Ç‡∏ß‡∏î" },
  { name: "‡πÇ‡∏ã‡∏î‡∏≤", price: 30, unit: "‡∏Ç‡∏ß‡∏î" },
  { name: "‡∏ô‡πâ‡∏≥‡πÅ‡∏Ç‡πá‡∏á", price: 30, unit: "‡∏ñ‡∏±‡∏á" },
  { name: "‡πÇ‡∏Ñ‡πâ‡∏Å (‡∏•‡∏¥‡∏ï‡∏£)", price: 50, unit: "‡∏Ç‡∏ß‡∏î" },
  { name: "‡πÅ‡∏Å‡πâ‡∏ß", price: 5, unit: "‡πÉ‡∏ö" },
  { name: "‡∏ó‡∏¥‡∏ä‡∏ä‡∏π", price: 10, unit: "‡∏ä‡∏¥‡πâ‡∏ô" }
];

function App() {
  const [order, setOrder] = useState(
    menu.map((item) => ({ ...item, quantity: 0 }))
  );

  const handleAdd = (index) => {
    const newOrder = [...order];
    newOrder[index].quantity += 1;
    setOrder(newOrder);
  };

  const handleRemove = (index) => {
    const newOrder = [...order];
    if (newOrder[index].quantity > 0) {
      newOrder[index].quantity -= 1;
      setOrder(newOrder);
    }
  };

  const handleClear = () => {
    setOrder(menu.map((item) => ({ ...item, quantity: 0 })));
  };

  const calculateItemPrice = (item) => {
    if (item.price === 100 && item.quantity >= 6) {
      const packs = Math.floor(item.quantity / 6);
      const remainder = item.quantity % 6;
      return (packs * 500) + (remainder * 100);
    } else {
      return item.price * item.quantity;
    }
  };

  const totalPrice = order.reduce((sum, item) => sum + calculateItemPrice(item), 0);

  return (
    <div className="App">
      <h1>üçª ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏î‡∏∑‡πà‡∏° üçª</h1>
      {order.map((item, index) => (
      <div key={index} className="item-card">
        <span>{item.name} ({item.price}‡∏ø)</span>
        <div className="quantity-control">
          <button className="minus-btn" onClick={() => handleRemove(index)}>-</button>
          <span className="quantity">{item.quantity}</span>
          <button className="plus-btn" onClick={() => handleAdd(index)}>+</button>
        </div>
      </div>
    ))}

      <h2>üìã ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å:</h2>
      {order.filter(item => item.quantity > 0).length === 0 && <p>‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å</p>}
      {order.filter(item => item.quantity > 0).map((item, index) => (
        <div key={index} className="summary-row">
          <span>{item.name} {item.quantity} {item.unit}</span>
          <span> {calculateItemPrice(item)} ‡∏ø</span>
        </div>
      ))}

      <div className="total">
        ‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {totalPrice} ‡∏ø
      </div>
      <button onClick={handleClear} className="clear-btn">
        ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
      </button>
    </div>
  );
}

export default App;
